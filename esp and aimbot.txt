
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Camera = workspace.CurrentCamera
local lp = Players.LocalPlayer

local ESPColor = Color3.fromRGB(255, 255, 255)
local espEnabled = true
local aimbotEnabled = false
local holdingRightClick = false
local aimRadius = 500
local aimPart = "Head"
local espData = {}
local targets = {}

-- Fullbright
local function enableFullbright()
	Lighting.Ambient = Color3.new(1, 1, 1)
	Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
	Lighting.Brightness = 5
	Lighting.GlobalShadows = false
	Lighting.ClockTime = 14
	Lighting.FogEnd = 100000
end

enableFullbright()

local skeletonJoints = {
	{"Head", "UpperTorso"},
	{"UpperTorso", "LowerTorso"},
	{"UpperTorso", "LeftUpperArm"},
	{"UpperTorso", "RightUpperArm"},
	{"LeftUpperArm", "LeftLowerArm"},
	{"RightUpperArm", "RightLowerArm"},
	{"LowerTorso", "LeftUpperLeg"},
	{"LowerTorso", "RightUpperLeg"},
	{"LeftUpperLeg", "LeftLowerLeg"},
	{"RightUpperLeg", "RightLowerLeg"},
}

local function WorldToScreen(pos)
	local screenPos, onScreen = Camera:WorldToViewportPoint(pos)
	return screenPos, onScreen
end

local function clearDrawings(obj)
	if espData[obj] then
		for _, d in pairs(espData[obj]) do
			d:Remove()
		end
		espData[obj] = nil
	end
end

local function createESP(obj)
	espData[obj] = {}

	local function draw()
		clearDrawings(obj)
		if not espEnabled then return end
		if not obj or not obj:FindFirstChild("HumanoidRootPart") then return end
		if not obj:FindFirstChild("Humanoid") then return end

		local hrp = obj.HumanoidRootPart
		local humanoid = obj.Humanoid
		local pos, onScreen = WorldToScreen(hrp.Position)
		if not onScreen then return end

		local dist = (lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") and (lp.Character.HumanoidRootPart.Position - hrp.Position).Magnitude) or 0
		local size = 1000 / dist

		local box = Drawing.new("Square")
		box.Size = Vector2.new(size, size * 1.5)
		box.Position = Vector2.new(pos.X - size / 2, pos.Y - size * 0.75)
		box.Color = ESPColor
		box.Thickness = 1
		box.Filled = false
		box.Transparency = 1
		box.Visible = true
		table.insert(espData[obj], box)

		local tag = Drawing.new("Text")
		tag.Text = string.format("%s [%.0f] HP: %d", obj.Name, dist, math.floor(humanoid.Health))
		tag.Position = Vector2.new(pos.X, pos.Y - size)
		tag.Color = ESPColor
		tag.Size = 14
		tag.Center = true
		tag.Outline = true
		tag.Visible = true
		table.insert(espData[obj], tag)

		for _, pair in ipairs(skeletonJoints) do
			local part1 = obj:FindFirstChild(pair[1])
			local part2 = obj:FindFirstChild(pair[2])
			if part1 and part2 then
				local p1, on1 = WorldToScreen(part1.Position)
				local p2, on2 = WorldToScreen(part2.Position)
				if on1 and on2 then
					local line = Drawing.new("Line")
					line.From = Vector2.new(p1.X, p1.Y)
					line.To = Vector2.new(p2.X, p2.Y)
					line.Color = ESPColor
					line.Thickness = 1
					line.Transparency = 1
					line.Visible = true
					table.insert(espData[obj], line)
				end
			end
		end
	end

	return draw
end

-- Update targets
local function updateTargets()
	targets = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= lp and plr.Character and plr.Character:FindFirstChild("Humanoid") then
			table.insert(targets, plr.Character)
		end
	end
	for _, model in ipairs(workspace:GetDescendants()) do
		if model:IsA("Model") and not Players:GetPlayerFromCharacter(model) and model:FindFirstChild("Humanoid") and model:FindFirstChild("HumanoidRootPart") then
			table.insert(targets, model)
		end
	end
end

-- ESP manager
local espFuncs = {}
local function refreshESP()
	updateTargets()
	for _, target in pairs(targets) do
		if not espFuncs[target] then
			espFuncs[target] = createESP(target)
		end
	end
end

local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(255, 255, 255)
fovCircle.Thickness = 1
fovCircle.NumSides = 100
fovCircle.Filled = false
fovCircle.Radius = aimRadius
fovCircle.Transparency = 1
fovCircle.Visible = false

RunService.RenderStepped:Connect(function()
	refreshESP()
	for obj, drawFunc in pairs(espFuncs) do
		pcall(drawFunc)
	end

	local mousePos = Vector2.new(lp:GetMouse().X, lp:GetMouse().Y)
	fovCircle.Position = mousePos
	fovCircle.Radius = aimRadius
	fovCircle.Visible = aimbotEnabled

	if aimbotEnabled and holdingRightClick then
		local closest = nil
		local closestDist = aimRadius
		for _, target in pairs(targets) do
			local part = target:FindFirstChild(aimPart)
			if part then
				local screenPos, onScreen = WorldToScreen(part.Position)
				if onScreen then
					local mag = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
					if mag < closestDist then
						closest = part
						closestDist = mag
					end
				end
			end
		end
		if closest then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, closest.Position)
		end
	end
end)

-- Toggle keys
UserInputService.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.Z and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
		espEnabled = not espEnabled
		for obj in pairs(espData) do
			clearDrawings(obj)
		end
	end
	if input.KeyCode == Enum.KeyCode.X and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
		aimbotEnabled = not aimbotEnabled
	end
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		holdingRightClick = true
	end
end)

UserInputService.InputEnded:Connect(function(input, gp)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		holdingRightClick = false
	end
end)

-- ESP auto add
Players.PlayerAdded:Connect(function(plr)
	plr.CharacterAdded:Connect(function(char)
		wait(1)
		if not espFuncs[char] then
			espFuncs[char] = createESP(char)
		end
	end)
end)

-- Draggable UI
local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
gui.Name = "ESP_UI"
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 110)
frame.Position = UDim2.new(0, 30, 0, 30)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.Active = true
frame.Draggable = true

local info = Instance.new("TextLabel", frame)
info.Size = UDim2.new(1, 0, 1, 0)
info.Text = "Ctrl + Z = Toggle ESP\nCtrl + X = Toggle Aimbot\nHold Right Click = Aim\nP = Show/Hide UI"
info.TextColor3 = Color3.new(1,1,1)
info.BackgroundTransparency = 1
info.TextWrapped = true
info.TextScaled = true

UserInputService.InputBegan:Connect(function(input, gp)
	if input.KeyCode == Enum.KeyCode.P then
		frame.Visible = not frame.Visible
	end
end)
